"""baseline schema

Revision ID: 48678ae86111
Revises: 
Create Date: 2025-09-27 06:10:15.532771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '48678ae86111'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cases')
    op.drop_table('users')
    op.drop_table('ufdr_files')
    op.drop_table('audit_logs')
    op.drop_table('artifacts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artifacts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('case_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('ufdr_file_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('extracted_text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('raw', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], name=op.f('artifacts_case_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ufdr_file_id'], ['ufdr_files.id'], name=op.f('artifacts_ufdr_file_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('artifacts_pkey'))
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('method', sa.VARCHAR(length=10), server_default=sa.text("'UNKNOWN'::character varying"), autoincrement=False, nullable=False),
    sa.Column('path', sa.VARCHAR(), server_default=sa.text("'/'::character varying"), autoincrement=False, nullable=False),
    sa.Column('user_agent', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status_code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('audit_logs_pkey'))
    )
    op.create_table('ufdr_files',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('case_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('storage_path', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['cases.id'], name=op.f('ufdr_files_case_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('ufdr_files_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('investigator', 'admin', name='userrole'), server_default=sa.text("'investigator'::userrole"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='users_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('cases',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('cases_created_by_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('cases_pkey'))
    )
    # ### end Alembic commands ###
